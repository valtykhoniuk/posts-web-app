{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport const postModule = {\n  state: () => ({\n    posts: [],\n    isPostLoading: false,\n    selectedSort: \"\",\n    searchQuery: \"\",\n    pageNumber: 1,\n    limit: 10,\n    totalPages: 0,\n    sortedOptions: [{\n      value: \"title\",\n      name: \"By name\"\n    }, {\n      value: \"body\",\n      name: \"By context\"\n    }]\n  }),\n  getters: {\n    sortedPosts(state) {\n      return [...state.posts].sort((post1, post2) => {\n        return post1[state.selectedSort]?.localeCompare(post2[state.selectedSort]);\n      });\n    },\n    sortedAndSearchedPosts(state, getters) {\n      return getters.sortedPosts.filter(post => post.title.toLowerCase().includes(getters.searchQuery.toLowerCase()));\n    }\n  },\n  mutations: {\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n    setLoading(state, bool) {\n      state.isPostsLoading = bool;\n    },\n    setPage(state, page) {\n      state.pageNumber = page;\n    },\n    setselectedSort(state, selectedSort) {\n      state.selectedSort = selectedSort;\n    },\n    setSearchQuery(state, searchQuery) {\n      state.searchQuery = searchQuery;\n    }\n  },\n  actions: {\n    async fetchPosts({\n      state,\n      commit\n    }) {\n      try {\n        commit(\"setLoading\", true);\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: state.pageNumber,\n            _limit: state.limit\n          }\n        });\n        commit(\"setTotalPages\", Math.ceil(response.headers[\"x-total-count\"] / state.limit));\n        commit(\"setPosts\", response.data);\n      } catch (error) {\n        alert(\"Error\");\n      } finally {\n        commit(\"setLoading\", false);\n      }\n    },\n    async loadMorePosts({\n      state,\n      commit\n    }) {\n      try {\n        commit(\"setPage\", state.pageNumber++);\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\", {\n          params: {\n            _page: state.pageNumber,\n            _limit: state.limit\n          }\n        });\n        commit(\"setTotalPages\", Math.ceil(response.headers[\"x-total-count\"] / state.limit));\n        commit(\"setPosts\", [...state.posts, ...response.data]);\n      } catch (error) {\n        alert(\"Error\");\n        this.isPostLoading = false;\n      }\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["postModule","state","posts","isPostLoading","selectedSort","searchQuery","pageNumber","limit","totalPages","sortedOptions","value","name","getters","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchedPosts","filter","post","title","toLowerCase","includes","mutations","setPosts","setLoading","bool","isPostsLoading","setPage","page","setselectedSort","setSearchQuery","actions","fetchPosts","commit","response","axios","get","params","_page","_limit","Math","ceil","headers","data","error","alert","loadMorePosts","namespaced"],"sources":["/Users/valeriiatykhoniuk/Documents/practice/posts-web-app/src/store/postModule.js"],"sourcesContent":["export const postModule = {\n  state: () => ({\n    posts: [],\n    isPostLoading: false,\n    selectedSort: \"\",\n    searchQuery: \"\",\n    pageNumber: 1,\n    limit: 10,\n    totalPages: 0,\n    sortedOptions: [\n      { value: \"title\", name: \"By name\" },\n      { value: \"body\", name: \"By context\" },\n    ],\n  }),\n\n  getters: {\n    sortedPosts(state) {\n      return [...state.posts].sort((post1, post2) => {\n        return post1[state.selectedSort]?.localeCompare(\n          post2[state.selectedSort]\n        );\n      });\n    },\n\n    sortedAndSearchedPosts(state, getters) {\n      return getters.sortedPosts.filter((post) =>\n        post.title.toLowerCase().includes(getters.searchQuery.toLowerCase())\n      );\n    },\n  },\n\n  mutations: {\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n\n    setLoading(state, bool) {\n      state.isPostsLoading = bool;\n    },\n\n    setPage(state, page) {\n      state.pageNumber = page;\n    },\n\n    setselectedSort(state, selectedSort) {\n      state.selectedSort = selectedSort;\n    },\n\n    setSearchQuery(state, searchQuery) {\n      state.searchQuery = searchQuery;\n    },\n  },\n  actions: {\n    async fetchPosts({ state, commit }) {\n      try {\n        commit(\"setLoading\", true);\n        const response = await axios.get(\n          \"https://jsonplaceholder.typicode.com/posts\",\n          {\n            params: {\n              _page: state.pageNumber,\n              _limit: state.limit,\n            },\n          }\n        );\n        commit(\n          \"setTotalPages\",\n          Math.ceil(response.headers[\"x-total-count\"] / state.limit)\n        );\n        commit(\"setPosts\", response.data);\n      } catch (error) {\n        alert(\"Error\");\n      } finally {\n        commit(\"setLoading\", false);\n      }\n    },\n\n    async loadMorePosts({ state, commit }) {\n      try {\n        commit(\"setPage\", state.pageNumber++);\n\n        const response = await axios.get(\n          \"https://jsonplaceholder.typicode.com/posts\",\n          {\n            params: {\n              _page: state.pageNumber,\n              _limit: state.limit,\n            },\n          }\n        );\n        commit(\n          \"setTotalPages\",\n          Math.ceil(response.headers[\"x-total-count\"] / state.limit)\n        );\n        commit(\"setPosts\", [...state.posts, ...response.data]);\n      } catch (error) {\n        alert(\"Error\");\n        this.isPostLoading = false;\n      }\n    },\n  },\n\n  namespaced: true,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}