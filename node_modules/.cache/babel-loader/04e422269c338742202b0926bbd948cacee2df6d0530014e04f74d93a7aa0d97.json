{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app__btns\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  class: \"observer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  const _directive_intersection = _resolveDirective(\"intersection\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Page with posts\", -1 /* HOISTED */)), _createVNode(_component_my_input, {\n    \"model-value\": _ctx.searchQuery,\n    \"onUpdate:modelValue\": _ctx.setSearchQuery,\n    placeholder: \"Search...\"\n  }, null, 8 /* PROPS */, [\"model-value\", \"onUpdate:modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_my_button, {\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Create post\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: _ctx.selectedSort,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedSort = $event),\n    options: _ctx.sortedOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[1] || (_cache[1] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: $options.createPost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), !_ctx.isPostLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: _ctx.sortedAndSearchedPosts,\n    onRemove: $options.removePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading..\")), _withDirectives(_createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), [[_directive_intersection, _ctx.loadMorePosts]])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_createVNode","_component_my_input","_ctx","searchQuery","setSearchQuery","placeholder","_hoisted_1","_component_my_button","onClick","$options","showDialog","default","_withCtx","_cache","_createTextVNode","_","_component_my_select","modelValue","selectedSort","$event","options","sortedOptions","_component_my_dialog","show","$data","dialogVisible","_component_post_form","onCreate","createPost","isPostLoading","_createBlock","_component_post_list","posts","sortedAndSearchedPosts","onRemove","removePost","_hoisted_2","_hoisted_3","loadMorePosts"],"sources":["/Users/valeriiatykhoniuk/Documents/practice/posts-web-app/src/pages/PostPageWithStore.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Page with posts</h1>\n    <my-input\n      :model-value=\"searchQuery\"\n      @update:model-value=\"setSearchQuery\"\n      placeholder=\"Search...\"\n    />\n    <div class=\"app__btns\">\n      <my-button @click=\"showDialog\">Create post</my-button>\n      <my-select v-model=\"selectedSort\" :options=\"sortedOptions\"></my-select>\n    </div>\n\n    <my-dialog v-model:show=\"dialogVisible\">\n      <post-form @create=\"createPost\" />\n    </my-dialog>\n    <post-list\n      :posts=\"sortedAndSearchedPosts\"\n      @remove=\"removePost\"\n      v-if=\"!isPostLoading\"\n    />\n    <div v-else>Loading..</div>\n    <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\n  </div>\n</template>\n\n<script>\nimport PostList from \"@/components/PostList.vue\";\nimport PostForm from \"@/components/PostForm.vue\";\nimport axios from \"axios\";\nimport MyInput from \"@/components/UI/MyInput.vue\";\nimport MyButton from \"@/components/UI/MyButton.vue\";\nimport MySelect from \"@/components/UI/MySelect.vue\";\nimport { mapState, mapGetters, mapActions, mapMutations } from \"vuex\";\n\nexport default {\n  components: {\n    MyInput,\n    MySelect,\n    MyButton,\n    PostList,\n    PostForm,\n  },\n\n  data() {\n    return {\n      dialogVisible: false,\n    };\n  },\n\n  methods: {\n    ...mapMutations({\n      setPage: \"post/setPage\",\n      setSearchQuery: \"post/setSearchQuery\",\n    }),\n\n    ...mapActions({\n      loadMorePosts: \"post/loadMorePosts\",\n      fetchPosts: \"post/fetchPosts\",\n    }),\n\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n\n    removePost(post) {\n      this.posts = this.posts.filter((p) => p.id !== post.id);\n    },\n\n    showDialog() {\n      this.dialogVisible = true;\n    },\n  },\n\n  mounted() {\n    this.fetchPosts();\n  },\n\n  watch: {},\n  computed: {\n    ...mapState({\n      posts: (state) => state.post.posts,\n      isPostLoading: (state) => state.post.isPostLoading,\n      selectedSort: (state) => state.post.selectedSort,\n      searchQuery: (state) => state.post.searchQuery,\n      pageNumber: (state) => state.post.pageNumber,\n      limit: (state) => state.post.limit,\n      totalPages: (state) => state.post.totalPages,\n      sortedOptions: (state) => state.post.sortedOptions,\n    }),\n    ...mapGetters({\n      sortedPosts: \"post/sortedPosts\",\n      sortedAndSearchedPosts: \"post/sortedAndSearchedPosts\",\n    }),\n  },\n\n  watch: {},\n};\n</script>\n\n<style>\n.app__btns {\n  display: flex;\n  justify-content: space-between;\n  margin: 15px 0;\n}\n\n.page__wrapper {\n  display: flex;\n  margin-top: 15px;\n}\n\n.page {\n  border: 1px solid black;\n  padding: 10px;\n}\n\n.current-page {\n  border: 2px solid teal;\n}\n</style>\n"],"mappings":";;EAQSA,KAAK,EAAC;AAAW;;EAR1BC,GAAA;AAAA;;EAsBwCD,KAAK,EAAC;AAAU;;;;;;;;;uBArBtDE,mBAAA,CAsBM,c,0BArBJC,mBAAA,CAAwB,YAApB,iBAAe,sBACnBC,YAAA,CAIEC,mBAAA;IAHC,aAAW,EAAEC,IAAA,CAAAC,WAAW;IACxB,qBAAkB,EAAED,IAAA,CAAAE,cAAc;IACnCC,WAAW,EAAC;mEAEdN,mBAAA,CAGM,OAHNO,UAGM,GAFJN,YAAA,CAAsDO,oBAAA;IAA1CC,OAAK,EAAEC,QAAA,CAAAC;EAAU;IATnCC,OAAA,EAAAC,QAAA,CASqC,MAAWC,MAAA,QAAAA,MAAA,OAThDC,gBAAA,CASqC,aAAW,E;IAThDC,CAAA;kCAUMf,YAAA,CAAuEgB,oBAAA;IAV7EC,UAAA,EAU0Bf,IAAA,CAAAgB,YAAY;IAVtC,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAU0BjB,IAAA,CAAAgB,YAAY,GAAAC,MAAA;IAAGC,OAAO,EAAElB,IAAA,CAAAmB;wDAG9CrB,YAAA,CAEYsB,oBAAA;IAFOC,IAAI,EAAEC,KAAA,CAAAC,aAAa;IAb1C,iBAAAZ,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAa6BK,KAAA,CAAAC,aAAa,GAAAN,MAAA;;IAb1CR,OAAA,EAAAC,QAAA,CAcM,MAAkC,CAAlCZ,YAAA,CAAkC0B,oBAAA;MAAtBC,QAAM,EAAElB,QAAA,CAAAmB;IAAU,sC;IAdpCb,CAAA;gCAmBab,IAAA,CAAA2B,aAAa,I,cAHtBC,YAAA,CAIEC,oBAAA;IApBNlC,GAAA;IAiBOmC,KAAK,EAAE9B,IAAA,CAAA+B,sBAAsB;IAC7BC,QAAM,EAAEzB,QAAA,CAAA0B;mEAGXrC,mBAAA,CAA2B,OArB/BsC,UAAA,EAqBgB,WAAS,I,gBACrBrC,mBAAA,CAA2D,OAA3DsC,UAA2D,gC,0BAAtCnC,IAAA,CAAAoC,aAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}